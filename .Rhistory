df
devtools::document()
?simulate_tp
df
simulate_tp()
library(tidyverse)
simulate_tp()
simulate_tp()
simulation_plot
document()
devtools::document
devtools::document()
x = 1
y = 0.01
df <- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1,25,
min = ml * 0.75) %>%
mutate(time = 1:100)
library(tidyverse)
df <- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1,25,
min = ml * 0.75) %>%
mutate(time = 1:100)
View(df)
View(df)
df <- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1,25,
min = ml * 0.75,
time = 1:100)
View(df)
df <- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
View(df)
sample <- df %>%
dplyr::filter(time == n)
n=2
sample <- df %>%
dplyr::filter(time == n)
View(sample)
sample <- data_frame(sim = triangle::rtriangle(100, sample$min, sample$max, sample$ml)) %>%
dplyr::mutate(sim_id = 1:100) %>%
tidyr::spread(sim_id, sim)
View(sample)
df <<- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
sample <- function(x, y){
df <<- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
}
sample <- function(x, y){
df <<- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
}
sample(5, 0.1)
View(df)
simulate_tp <- function(x, n){
sample <- x %>%
dplyr::filter(time == n)
sample <- data_frame(sim = triangle::rtriangle(100, sample$min, sample$max, sample$ml)) %>%
dplyr::mutate(sim_id = 1:100) %>%
tidyr::spread(sim_id, sim)
simulations <<- purrr::map_dfr(1:100, sample, .id = "t") %>%
dplyr::mutate(t = as.numeric(t)) %>%
dplyr::rename_at(2:101, ~ c(paste0("sim_", 1:100))) %>%
tidyr::gather("sim", "tp_estimate", 2:101)
avg_simulation <<- simulations %>%
dplyr::group_by(t) %>%
dplyr::summarise(avg_estimate = mean(tp_estimate)) %>%
dplyr::arrange(t)
df_plot <- df %>%
tidyr::gather("type", "estimate", 1:3)
simulation_plot <<-
ggplot2::ggplot() +
geom_line(data = simulations,
aes(t, tp_estimate, group = sim, colour = sim),
show.legend = F,
alpha = 0.1)+
geom_line(data = avg_simulation, aes(t, avg_estimate, group = 1))+
geom_line(data = df_plot, aes(time, estimate, group = type), linetype = 2)
}
x = df
df = x
x <- df
n <- distinct(x, time)
View(n)
n <- as.vector(distinct(x, time))
n <- as.vector(distinct(x, time))
View(x)
View(df)
View(n)
View(x)
n <- x$time
simulate_tp <- function(x){
n <- x$time
sample <- x %>%
dplyr::filter(time == n)
sample <- data_frame(sim = triangle::rtriangle(100, sample$min, sample$max, sample$ml)) %>%
dplyr::mutate(sim_id = 1:100) %>%
tidyr::spread(sim_id, sim)
simulations <<- purrr::map_dfr(1:100, sample, .id = "t") %>%
dplyr::mutate(t = as.numeric(t)) %>%
dplyr::rename_at(2:101, ~ c(paste0("sim_", 1:100))) %>%
tidyr::gather("sim", "tp_estimate", 2:101)
avg_simulation <<- simulations %>%
dplyr::group_by(t) %>%
dplyr::summarise(avg_estimate = mean(tp_estimate)) %>%
dplyr::arrange(t)
df_plot <- df %>%
tidyr::gather("type", "estimate", 1:3)
simulation_plot <<-
ggplot2::ggplot() +
geom_line(data = simulations,
aes(t, tp_estimate, group = sim, colour = sim),
show.legend = F,
alpha = 0.1)+
geom_line(data = avg_simulation, aes(t, avg_estimate, group = 1))+
geom_line(data = df_plot, aes(time, estimate, group = type), linetype = 2)
}
simulate_tp <- function(x){
n <- x$time
sample <- x %>%
dplyr::filter(time == n)
sample <- data_frame(sim = triangle::rtriangle(x, sample$min, sample$max, sample$ml)) %>%
dplyr::mutate(sim_id = 1:x) %>%
tidyr::spread(sim_id, sim)
simulations <<- purrr::map_dfr(1:100, sample, .id = "t") %>%
dplyr::mutate(t = as.numeric(t)) %>%
dplyr::rename_at(2:101, ~ c(paste0("sim_", 1:100))) %>%
tidyr::gather("sim", "tp_estimate", 2:101)
avg_simulation <<- simulations %>%
dplyr::group_by(t) %>%
dplyr::summarise(avg_estimate = mean(tp_estimate)) %>%
dplyr::arrange(t)
df_plot <- df %>%
tidyr::gather("type", "estimate", 1:3)
simulation_plot <<-
ggplot2::ggplot() +
geom_line(data = simulations,
aes(t, tp_estimate, group = sim, colour = sim),
show.legend = F,
alpha = 0.1)+
geom_line(data = avg_simulation, aes(t, avg_estimate, group = 1))+
geom_line(data = df_plot, aes(time, estimate, group = type), linetype = 2)
}
simulate_tp <- function(x){
n <- x$time
sample <- x %>%
dplyr::filter(time == n)
sample <- data_frame(sim = triangle::rtriangle(100, sample$min, sample$max, sample$ml)) %>%
dplyr::mutate(sim_id = 1:100) %>%
tidyr::spread(sim_id, sim)
simulations <<- purrr::map_dfr(1:100, sample, .id = "t") %>%
dplyr::mutate(t = as.numeric(t)) %>%
dplyr::rename_at(2:101, ~ c(paste0("sim_", 1:100))) %>%
tidyr::gather("sim", "tp_estimate", 2:101)
avg_simulation <<- simulations %>%
dplyr::group_by(t) %>%
dplyr::summarise(avg_estimate = mean(tp_estimate)) %>%
dplyr::arrange(t)
df_plot <- df %>%
tidyr::gather("type", "estimate", 1:3)
simulation_plot <<-
ggplot2::ggplot() +
geom_line(data = simulations,
aes(t, tp_estimate, group = sim, colour = sim),
show.legend = F,
alpha = 0.1)+
geom_line(data = avg_simulation, aes(t, avg_estimate, group = 1))+
geom_line(data = df_plot, aes(time, estimate, group = type), linetype = 2)
}
simulate_tp(df)
n <- x$time
sample <- x %>%
dplyr::filter(time == n)
View(sample)
apply_tp <- function(n){
sample <- x %>%
dplyr::filter(time == n)
sample <- data_frame(sim = triangle::rtriangle(100, sample$min, sample$max, sample$ml)) %>%
dplyr::mutate(sim_id = 1:100) %>%
tidyr::spread(sim_id, sim)
}
simulations <<- purrr::map_dfr(1:100, apply_tp, .id = "t") %>%
dplyr::mutate(t = as.numeric(t)) %>%
dplyr::rename_at(2:101, ~ c(paste0("sim_", 1:100))) %>%
tidyr::gather("sim", "tp_estimate", 2:101)
View(simulations)
sample <- function(x, y){
df <<- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
}
the <- sample_tp(5, 0.1)
sample_tp <- function(x, y){
df <<- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
}
the <- sample_tp(5, 0.1)
sample_tp <- function(x, y){
df <- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
}
sample_tp(5, 0.4)
sample_tp <- function(x, y){
df <- data_frame(ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75,
time = 1:100)
df
}
sample_tp(5, 0.4)
check <- sample_tp(5, 0.1)
simulate_tp <- function(x){
apply_tp <- function(n){
sample <- x %>%
dplyr::filter(time == n)
sample <- data_frame(sim = triangle::rtriangle(100, sample$min, sample$max, sample$ml)) %>%
dplyr::mutate(sim_id = 1:100) %>%
tidyr::spread(sim_id, sim)
}
simulations <<- purrr::map_dfr(1:100, apply_tp, .id = "t") %>%
dplyr::mutate(t = as.numeric(t)) %>%
dplyr::rename_at(2:101, ~ c(paste0("sim_", 1:100))) %>%
tidyr::gather("sim", "tp_estimate", 2:101)
avg_simulation <<- simulations %>%
dplyr::group_by(t) %>%
dplyr::summarise(avg_estimate = mean(tp_estimate)) %>%
dplyr::arrange(t)
df_plot <- df %>%
tidyr::gather("type", "estimate", 1:3)
simulation_plot <<-
ggplot2::ggplot() +
geom_line(data = simulations,
aes(t, tp_estimate, group = sim, colour = sim),
show.legend = F,
alpha = 0.1)+
geom_line(data = avg_simulation, aes(t, avg_estimate, group = 1))+
geom_line(data = df_plot, aes(time, estimate, group = type), linetype = 2)
}
simulate_tp(check)
View(simulation_plot)
View(simulation_plot)
simulation_plot
devtools::document()
devtools::document()
?sample_tp
devtools::document()
devtools::document()
devtools::document()
?fxmc
devtools::document()
devtools::document()
?fxmc
devtools::document()
devtools::document()
library(fxmc)
sample_tp(5, 0.1)
check <- sample_tp(5, 0.1)
simulate_tp(check)
View(check)
sample_tp <- function(x, y){
df <- data_frame(time = 1:100,
ml = rnorm(100, x, y)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75)
df
}
library(fxmc)
sample_tp(4, 0.1)
library(fxmc)
sample_tp(100, 5, 0.1)
sample_tp(50, 5, 0.1)
library(fxmc)
sample_tp(50, 5, 0.1)
sample_tp <- function(n, x){
df <- data_frame(time = 1:n,
ml = rnorm(n, x, 0.1)) %>%
mutate(max = ml * 1.25,
min = ml * 0.75)
df
}
library(fxmc)
df
library(fxmc)
sample_tp(5, 2)
devtools::document()
devtools::document()
